version: 2.0

jobs:
  checkout:
    docker:
      - image: aloknigam247/cygnus
    working_directory: ~/cygnus
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/
          paths:
            - cygnus

  compiler-warnings:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Compiler Warnings on strict mode
          command: |
              cd ~/cygnus
              source sourceme
              cybuild --strict --release 2>&1 | tee build.log
      - persist_to_workspace:
          root: ~/cygnus
          paths:
            - reports
      - store_artifacts:
          path: ~/cygnus/build.log
          destination: Build log
      - store_artifacts:
          path: ~/cygnus/reports/warnings/warns
          destination: Warnings

  functional-tests:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run Unit Test
          command: |
            cd ~/cygnus
            source sourceme
            cyregress -d tests -a 2>&1 | tee unittest.log
      - store_artifacts:
          path: ~/cygnus/cyregress.log
          destination: unit-test-log
  
  unit-tests:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run Unit Test
          command: |
            cd ~/cygnus
            source sourceme
            cyregress -d tests -a 2>&1 | tee unittest.log
      - store_artifacts:
          path: ~/cygnus/cyregress.log
          destination: unit-test-log
  
  performance-checks:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/

  memory-checks:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/

  coverage-unit:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Coverage Run
          command: |
              cd ~/cygnus
              source sourceme
              cyregress -a -d tests --coverage
      - persist_to_workspace:
          root: ~/cygnus
          paths:
            - reports
      - store_artifacts:
          path: ~/cygnus/reports/cov
          destination: Coverage data

  coverage-functional:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Coverage Run
          command: |
              cd ~/cygnus
              source sourceme
              cyregress -a -d tests --coverage
      - persist_to_workspace:
          root: ~/cygnus
          paths:
            - reports
      - store_artifacts:
          path: ~/cygnus/reports/cov
          destination: Coverage data

  lint-checks:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Lint Run
          command: echo "Disabled"

  docs-checks:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Generate Docs
          command: |
            cd ~/cygnus
            source sourceme
            gen-docs
      - persist_to_workspace:
          root: ~/cygnus
          paths:
            - reports
      - store_artifacts:
          path: ~/cygnus/docs
          destination: Docs
      - store_artifacts:
          path: ~/cygnus/reports/docs/undocumented
          destination: Doc Coverage

  code-style:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/

  report-generation:
    docker:
      - image: aloknigam247/cygnus
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Report Generation
          command: |
              cd ~
              source cygnus/sourceme
              gen-report | tee report.log

workflows:
  version: 2
  Commit-Test:
    jobs:
      - checkout
      - compiler-warnings:
          requires:
            - checkout
      - functional-tests:
          requires:
            - compiler-warnings
      - coverage-functional:
          requires:
            - compiler-warnings
      - unit-tests:
          requires:
            - checkout
      - performance-checks:
          requires:
            - checkout
      - memory-checks:
          requires:
            - checkout
      - coverage-unit:
          requires:
            - checkout
      - lint-checks:
          requires:
            - checkout
      - docs-checks:
          requires:
            - checkout
      - code-style:
          requires:
            - checkout
      - report-generation:
          requires:
            - functional-tests
            - unit-tests
            - performance-checks
            - memory-checks
            - test-coverage
            - lint-checks
            - docs-checks
            - code-style
