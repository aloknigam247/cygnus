#!/bin/bash

source cmdline.bash    # command line parser

declare BUILD_MODE="debug"
declare ERROR=0
declare STRICT="no"

OPTION['--clean']="value:bool,eval:BUILD_MODE=clean,help:clean generated files"
OPTION['--coverage']="value:bool,eval:BUILD_MODE=coverage,help:create coverage build"
OPTION['--debug']="value:bool,eval:BUILD_MODE=debug,help:create debug build"
OPTION['--force']="value:bool,help:forcefully remake"
OPTION['--memory']="value:bool,eval:BUILD_MODE=memory,help:use lint tool along with compilation"
OPTION['--perf']="value:bool,eval:BUILD_MODE=perf;BUILD_MODE=perf,help:create performance build"
OPTION['--release']="value:bool,eval:BUILD_MODE=release,help:create release build"
OPTION['--sanitize']="value:bool,eval:BUILD_MODE=sanitize,help:create sanitized build"
OPTION['--strict']="value:bool,eval:STRICT=yes,help:use strict options for compilation"

MAKE() {
    local make_force=""
    if [[ ${VALUES['--force']} ]]; then
        make_force="-B"
    fi

    make -r $make_force MODE=$1 STRICT=$STRICT 3>&1 1>&2 2>&3 3>&- | tee $report_dir/${BUILD_MODE}-errors | tee logs/cybuild-${BUILD_MODE}.log

    if [[ ${PIPESTATUS[0]} -ne 0 ]]; then
        return 1
    fi

    sed -i 's|\x1b\[[;0-9]*m\x1b\[K||g' $report_dir/${BUILD_MODE}-errors logs/cybuild-${BUILD_MODE}.log
}

main() {
    parseCmdLine $@
    local errors=0
    local warnings=0
    local report_dir="reports/compiler"
    mkdir -p $report_dir
    SECONDS=0
    case $BUILD_MODE in
        clean)
            MAKE clean
            ;;
        coverage)
            MAKE coverage
            ;;
        debug)
            MAKE debug
            ;;
        memory)
            MAKE memory
            ;;
        perf)
            MAKE perf
            ;;
        release)
            MAKE release
            ;;
        sanitize)
            MAKE sanitize
            ;;
    esac || ERROR=1

    if [[ ! $BUILD_MODE == "clean" ]]; then
        build_time=$(TZ=UTC0 printf '%(%Hh:%Mm:%Ss)T\n' $SECONDS)

        if [[ -f $report_dir/${BUILD_MODE}-errors ]]; then
            errors=$(egrep -c "error:" $report_dir/${BUILD_MODE}-errors)
            warnings=$(egrep -c "warning:" $report_dir/${BUILD_MODE}-errors)
            if [[ $warnings -ne 0 ]]; then
                echo -e "\e[1;33mWarnings: $warnings\e[m"
                #if [[ ${VALUES['--strict']} ]]; then Enable it when compiler warnings are enabled
                #    ERROR=1
                #fi
            fi
            if [[ $errors -ne 0 ]]; then
                echo -e "\e[1;31mErrors: $errors\e[m"
                ERROR=1
            fi
        fi
    fi

    if [[ $ERROR -eq 0 ]]; then
        exe=$CYGNUS_HOME/build/bin/$BUILD_MODE/cygnus-$BUILD_MODE
        test -f $exe && echo $(du -h $exe | cut -f1) in $build_time
        echo -e "\e[1;32mSuccess\e[m"
    else
        echo -e "\e[1;31mFailed\e[m"
        return 1
    fi
}

mkdir -p logs
main $@
exit $?
