#!/usr/bin/python3.7

import argparse
from pathlib import Path
import sys

class Args:
    __parser = argparse.ArgumentParser()

    def __init__(self):
        self.__parser.add_argument("dir", metavar="dir", default=".", nargs='+', help="directory to scan for source files")

    def parse(self):
        return self.__parser.parse_args()

def collectFiles(dir, ext):
    cppList = []
    for file in Path(dir).glob('**/*.' + ext):
        cppList.append(file)
    return cppList

class err:
    def __init__(self, res=None, desc=None, file=None, linestr=None, lineno=None):
        self.res = res
        self.desc = desc
        self.file = file
        self.linestr = linestr
        self.lineno = lineno

    def print(self):
        print(self.file, end = ': ')
        print(self.desc)


#---------------------------------------------------------------------------------------------------------------------------------------------
def checkLicense(file):
    lic="""\
/************************************************************************************
 * MIT License                                                                      *
 *                                                                                  *
 * Copyright (c) 2019 Alok Nigam                                                    *
 *                                                                                  *
 * Permission is hereby granted, free of charge, to any person obtaining a copy     *
 * of this software and associated documentation files (the "Software"), to deal    *
 * in the Software without restriction, including without limitation the rights     *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell        *
 * copies of the Software, and to permit persons to whom the Software is            *
 * furnished to do so, subject to the following conditions:                         *
 *                                                                                  *
 * The above copyright notice and this permission notice shall be included in all   *
 * copies or substantial portions of the Software.                                  *
 *                                                                                  *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR       *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,         *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE      *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER           *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,    *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE    *
 * SOFTWARE.                                                                        *
 ************************************************************************************/\
""".split('\n')
    fd = open(file, 'r')
    lineno=0
    
    for line in fd.readlines():
        if(lineno >= len(lic)):
            break
        if(lic[lineno] != line.rstrip()):
            return err(1, "LICENSE is missing", file, line, lineno)
        lineno = lineno+1

    return err(0)
    

#---------------------------------------------------------------------------------------------------------------------------------------------


def main():
    args = Args()
    opt = args.parse()

    cppList = []
    hList = []

    for dir in opt.dir:
        cppList += (collectFiles(dir, "cpp"))
        hList += (collectFiles(dir, "h"))

    for file in hList:
        ret = checkLicense(file)
        if(ret.res):
            ret.print()

    for file in cppList:
        ret = checkLicense(file)
        if(ret.res):
            ret.print()

if __name__ == "__main__":
    ret = main()
    sys.exit(ret)
