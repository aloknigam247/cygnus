#!/bin/bash

source $CYGNUS_HOME/tools/funcs.bash    # source common functions

adder() {
    local sum=0
    while [[ $1 ]]; do
        sum=$((sum+$1))
        shift
    done
    echo $sum
}

covReport() {
    echo "Coverage Report::"
    test -f reports/coverage/func/html/index.html && echo "    Funtional Coverage: $(egrep -m 1 "headerCovTableEntryHi" reports/coverage/func/html/index.html | sed -r 's/[^0-9.]//g')%" || echo "    Functional Coverage: 0%"
    test -f reports/coverage/unit/html/index.html && echo "    Unit Coverage: $(egrep -m 1 "headerCovTableEntryHi" reports/coverage/unit/html/index.html | sed -r 's/[^0-9.]//g')%" || echo "    Unit Coverage: 0%"
    echo
}

docsReport() {
    echo "DOCS::"
    echo "    Status: $(cat reports/docs/status)"
    echo "    Undocumented: $(cat reports/docs/undoc)"
    echo
}

lintReport() {
    echo "Lint Report::"
    echo "    Errors: $(($(cat reports/lint.log | wc -l)-1))"
    echo
}

memReport() {
    echo "Memory Report::"
    test -f reports/mem-check/func/errors && echo "    Functional: $(adder $(egrep -o "[0-9] errors" reports/mem-check/func/errors | sed 's/ errors//'))" || echo "    Functional: -1"
    test -f reports/mem-check/unit/errors && echo "    Unit: $(adder $(egrep -o "[0-9] errors" reports/mem-check/unit/errors | sed 's/ errors//'))" || echo "   Unit: -1"
    echo
}

perfReport() {
    echo "Performace Report::"
    if [[ $(find test_run/perf/func -name "testfail" | wc -l ) -eq 0 ]]; then
        echo "    Functional: PASS"
    else
        echo "    Functional: FAIL"
    fi
    if [[ $(find test_run/perf/unit -name "testfail" | wc -l ) -eq 0 ]]; then
        echo "    Unit: PASS"
    else
        echo "    Unit: FAIL"
    fi
    echo
}

releaseTestReport() {
    echo "Unit Test::"
    echo
}

sanitizationReport() {
    echo "Sanitization Report::"
    if [[  $(find test_run/sanitize/func -name "run.log" | xargs egrep -c "ERROR: ") -eq 0 ]]; then
        echo "    Functioncal: PASS"
    else
        echo "    Functional: FAIL"
    fi
    if [[  $(find test_run/sanitize/unit -name "run.log" | xargs egrep -c "ERROR: ") -eq 0 ]]; then
        echo "    Unit: PASS"
    else
        echo "    Unit: FAIL"
    fi
    echo
}

warnReport() {
    echo "Compiler Warnings::"
    test -f reports/warnings/debug-errors && echo "    Debug: $(egrep -c "warning: " reports/warnings/debug-errors)" || echo "    Debug: -1" 
    test -f reports/warnings/release-errors && echo "    Release: $(egrep -c "warning: " reports/warnings/release-errors)" || echo "    Release: -1" 
    echo
}

main() {
    parseCmdLine $@
    covReport
    docsReport
    lintReport
    memReport
    perfReport
    relaseTestReport
    sanitizationReport
    warnReport
    EXIT
}

main $@
